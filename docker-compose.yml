# Versão simplificada do seu docker-compose.yml
version: '3.8'

services:
  langflowai:
    build:
      context: .
      dockerfile: Dockerfile.langflow
    restart: unless-stopped
    command: uvicorn langflow.main:create_app --host 0.0.0.0 --port 7860 --workers 4
    environment:
      # As variáveis de idioma foram movidas para o Dockerfile
      - TZ=America/Sao_Paulo # Manter o TZ é uma boa prática

      # Variáveis da Aplicação
      - LANGFLOW_NEW_USER_IS_ACTIVE=true
      - LANGFLOW_SUPERUSER=${LANGFLOW_SUPERUSER}
      - LANGFLOW_SUPERUSER_PASSWORD=${LANGFLOW_SUPERUSER_PASSWORD}
      - LANGFLOW_DATABASE_URL=${LANGFLOW_DATABASE_URL}
      - LANGFLOW_CACHE_TYPE=redis
      - LANGFLOW_REDIS_URL=${LANGFLOW_REDIS_URL}
      - AWS_S3_ENDPOINT_URL=${AWS_S3_ENDPOINT_URL}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_S3_REGION=auto
    depends_on:
      - postgres
      - redis
    networks:
      - sua_rede_backend

  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      # Apenas as variáveis do Postgres são necessárias
      - TZ=America/Sao_Paulo
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - sua_rede_backend

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    networks:
      - sua_rede_backend

volumes:
  postgres_data: {}

networks:
  sua_rede_backend:
    # ...