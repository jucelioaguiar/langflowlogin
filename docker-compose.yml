version: '3.8'

services:
  langflowai:
    image: langflowai/langflow:latest
    restart: unless-stopped
    command: >
      sh -c "
        echo 'Aguardando o PostgreSQL ficar pronto...';
        while ! timeout 1 bash -c 'cat < /dev/null > /dev/tcp/postgres/5432'; do
          echo 'Postgres ainda não está pronto - aguardando...';
          sleep 2;
        done;
        echo 'PostgreSQL está pronto! Iniciando o Langflow...';
        uvicorn langflow.main:create_app --host 0.0.0.0 --port 7860 --workers 4;
      "
    environment:
      # Variáveis para Login, Timezone e Idioma
      - LANGFLOW_NEW_USER_IS_ACTIVE=true
      - LANGFLOW_SUPERUSER=${LANGFLOW_SUPERUSER}
      - LANGFLOW_SUPERUSER_PASSWORD=${LANGFLOW_SUPERUSER_PASSWORD}
      - TZ=America/Sao_Paulo
      - LANG=pt_BR.UTF-8

      # Variáveis da Aplicação
      - LANGFLOW_DATABASE_URL=${LANGFLOW_DATABASE_URL}
      - LANGFLOW_CACHE_TYPE=redis
      - LANGFLOW_REDIS_URL=${LANGFLOW_REDIS_URL}/0
      - AWS_S3_ENDPOINT_URL=${AWS_S3_ENDPOINT_URL}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_S3_REGION=auto
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - sua_rede_backend

  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      - TZ=America/Sao_Paulo
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - sua_rede_backend

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sua_rede_backend

volumes:
  postgres_data: {}
  redis_data: {}

networks:
  sua_rede_backend:
